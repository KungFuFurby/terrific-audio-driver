---
name: Build

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '30 13 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      matrix:
        os:
          - ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build
      shell: bash
      run: |
        if [[ ${RUNNER_OS} == "Linux" ]]; then
            printf '%(%y-%m-%d_%T)T\x1b[32m\t%b\x1b[0m\n' -1 'Download dep' 1>&2
            sudo apt-get update
            sudo apt-get install -y ninja-build lib{glu1-mesa,xcursor,xrender,xfixes,webkit2gtk-4.1,vlc,png,gl1-mesa,sdl2,pango1.0,x11,xext,xft,xinerama,mpv}-dev\
            printf '%(%y-%m-%d_%T)T\x1b[32m\t%b\x1b[0m\n' -1 'Build Wiz' 1>&2
            git submodule update --init --recursive
            make -j -C wiz
            printf '%(%y-%m-%d_%T)T\x1b[32m\t%b\x1b[0m\n' -1 'Cargo Fmt' 1>&2
            cargo fmt --check --all
            printf '%(%y-%m-%d_%T)T\x1b[32m\t%b\x1b[0m\n' -1 'Cargo Clippy' 1>&2
            cargo clippy --quiet
            printf '%(%y-%m-%d_%T)T\x1b[32m\t%b\x1b[0m\n' -1 'Cargo Test' 1>&2
            cargo test --quiet
            printf '%(%y-%m-%d_%T)T\x1b[32m\t%b\x1b[0m\n' -1 'Cargo Build' 1>&2
            cargo build --quiet
        fi > /dev/null
